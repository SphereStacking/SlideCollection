name: Deploy pages

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup @antfu/ni
        run: npm i -g @antfu/ni

      - name: Install dependencies
        run: nci

      - name: Find slide files
        id: find-slides
        run: echo "SLIDE_FILES=$(find slides -name 'slides.md' | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Build and Cache Slides
        run: |
          for file in $SLIDE_FILES; do
            SLIDE_DIR=$(dirname $file)
            SLIDE_HASH=$(sha256sum $file | awk '{ print $1 }')
            CACHE_KEY="${{ runner.os }}-slide-${SLIDE_HASH}"
            echo "Checking cache for $file with key $CACHE_KEY"

            # Restore cache
            cache-hit=$(echo "::restore-cache name=slide-cache,path=$SLIDE_DIR/dist,key=$CACHE_KEY::")
            if [[ $cache-hit == *"Cache hit"* ]]; then
              echo "Cache hit for $file, skipping build."
            else
              echo "Cache miss for $file, building..."
              npx slidev build $file
              echo "Caching built files for $file"
              echo "::save-cache name=slide-cache,path=$SLIDE_DIR/dist,key=$CACHE_KEY::"
            fi
          done

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - uses: actions/upload-pages-artifact@v3
        with:
          path: slides/*/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
