name: Deploy pages

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup @antfu/ni
        run: npm i -g @antfu/ni

      - name: Install dependencies
        run: nci

      - name: Find changed slide files
        id: find-changed-slides
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            SLIDE_FILES=$(git diff --name-only HEAD^ HEAD | grep 'slides/.*/slides.md')
          else
            SLIDE_FILES=$(find slides -name 'slides.md')
          fi
          SLIDE_FILES=$(echo "$SLIDE_FILES" | sed 's|slides/||' | tr '\n' ';')
          echo "SLIDE_FILES=$SLIDE_FILES" >> $GITHUB_ENV

      - name: Cache built files
        id: cache-built-files
        uses: actions/cache@v3
        with:
          path: slides/*/dist
          key: ${{ runner.os }}-build-${{ hashFiles('**/slides/**/*.md') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build
        run: |
          if [ -n "$SLIDE_FILES" ]; then
            IFS=';' read -ra FILES <<< "$SLIDE_FILES"
            for file in "${FILES[@]}"; do
              # Extract the directory name from the file path
              DIR_NAME=$(dirname "$file")
              # Create the output directory if it doesn't exist
              mkdir -p ./dist/$DIR_NAME
              # Build the slide and output to the correct directory
              npx slidev build ./slides/$file --out ./dist/$DIR_NAME
            done
          else
            echo "No slide files to build."
          fi

      - name: Display folder structure
        run: |
          if find . -type d -name 'dist' | grep -q 'dist'; then
            find . -type d -name 'dist' -exec tree {} \;
          else
            echo "No dist directory found."
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./src/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
